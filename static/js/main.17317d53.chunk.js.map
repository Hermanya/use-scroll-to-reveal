{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["index_es","ref","_a","Object","react","revealed","setRevealed","observer","IntersectionObserver","entries","isIntersecting","observe","current","disconnect","animation","keyframes","_templateObject","animations","StyledSection","styled","section","_templateObject2","_ref","_ref$hue","hue","_ref2","css","_templateObject3","MySection","props","useRef","useMyHook","react_default","a","createElement","assign","MyA","_templateObject4","App","App_MySection","href","ReactDOM","render","src_App","document","getElementById"],"mappings":"oJAqBeA,EAnBF,SAAAC,GACb,IAAAC,EAAWC,OAAAC,EAAA,SAAAD,EAAQ,GACnBE,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAaA,OAXEC,OAAAC,EAAA,UAAAD,CAAS,WACX,IAAAI,EAAA,IAAAC,qBAAA,SAAAC,GACAA,EAAA,GAAAC,gBACAJ,GAAA,KAIA,OADAC,EAAAI,QAAAV,EAAAW,SACA,WACAL,EAAAM,eAEG,IACHR,oiBCXA,IAAMS,EAAYC,YAAHC,IAAeC,UAExBC,EAAgBC,IAAOC,QAAVC,IAOC,SAAAC,GAAA,IAAAC,EAAAD,EAAEE,IAAF,gBAAAD,EAAM,EAANA,GAChB,SAAAE,GAAA,OAAAA,EAAEpB,UAA0BqB,YAAJC,IAAwBb,KAI9Cc,EAAY,SAACC,GACjB,IAAM5B,EAAM6B,mBACNzB,EAAW0B,EAAU9B,GAC3B,OAAO+B,EAAAC,EAAAC,cAAChB,EAADf,OAAAgC,OAAA,CAAe9B,SAAUA,EAAUJ,IAAKA,GAAS4B,KAGpDO,EAAMjB,IAAOc,EAAVI,KA4CMC,EApBH,WACV,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACK,EAAD,KAEEP,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,iDACLF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,+CAIPF,EAAAC,EAAAC,cAACK,EAAD,CAAWf,IAAK,KACdQ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YA7BA,sXA+BPF,EAAAC,EAAAC,cAACK,EAAD,CAAWf,IAAK,KACdQ,EAAAC,EAAAC,cAACE,EAAD,CAAKI,KAAK,oDAAV,UACAR,EAAAC,EAAAC,cAACE,EAAD,CAAKI,KAAK,sDAAV,UC5DRC,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.17317d53.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nvar useMyHook = function useMyHook(ref) {\n  var _a = useState(false),\n      revealed = _a[0],\n      setRevealed = _a[1];\n\n  useEffect(function () {\n    var observer = new IntersectionObserver(function (entries) {\n      if (entries[0].isIntersecting) {\n        setRevealed(true);\n      }\n    });\n    observer.observe(ref.current);\n    return function () {\n      observer.disconnect();\n    };\n  }, []);\n  return revealed;\n};\n\nexport default useMyHook;\nexport { useMyHook };","import React, {useRef} from 'react'\n\nimport useMyHook from 'use-scroll-to-reveal'\n\nimport styled, { keyframes, css } from 'styled-components';\nimport * as animations from 'react-animations';\n\nconst animation = keyframes`${animations.fadeIn}`;\n\nconst StyledSection = styled.section`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 110vh;\n  background: hsl(${({hue=0}) => hue}, 50%, 50%);\n  ${({revealed}) => revealed && css`animation: 2s ${animation}`}\n  animation-delay: 0.1s;\n`;\n\nconst MySection = (props) => {\n  const ref = useRef()\n  const revealed = useMyHook(ref)\n  return <StyledSection revealed={revealed} ref={ref} {...props}/>\n}\n\nconst MyA = styled.a`\ncolor: white;\nmargin: 0.5em;\n`\n\n\nconst example = `\n// example with styled-components\n// and react-animations\nconst Section = styled.section\\`\n  // ... your styles\n  \\${({revealed}) =>\n    revealed &&\n      css\\`animation: 1s \\${animation}\\`}\n\\`;\nconst MySection = (props) => {\n  const ref = useRef()\n  const revealed = useMyHook(ref)\n  return <Section\n    revealed={revealed}\n    ref={ref}\n    {...props}/>\n}`\n\nconst App = () => {\n  return (\n    <div>\n      <MySection>\n\n        <pre><code>{`npm install use-scroll-to-reveal`}</code></pre>\n        <pre><code>{`yarn add use-scroll-to-reveal`}</code></pre>\n\n\n      </MySection>\n      <MySection hue={120}>\n        <pre><code>{example}</code></pre>\n      </MySection>\n      <MySection hue={240}>\n        <MyA href=\"https://github.com/Hermanya/use-scroll-to-reveal\">github</MyA>\n        <MyA href=\"https://www.npmjs.com/package/use-scroll-to-reveal\">npm</MyA>\n      </MySection>\n    </div>\n  )\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}